import logging
from pathlib import Path
from aiogram import Router, F
from aiogram.enums import ParseMode
from aiogram.types import Message, InputMediaPhoto, FSInputFile
from bot_config import bot
from handlers.start_hendler import start
from keyboards import projects_kb

logger = logging.getLogger(__name__)

router = Router()


@router.message(F.text == "‚úÖ –ü—Ä–æ–µ–∫—Ç—ã")
async def projects_callback(message: Message):
    try:
        # –õ–æ–≥–∏—Ä—É–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
        user_info = f"ID: {message.from_user.id}, "
        if message.from_user.username:
            user_info += f"Username: @{message.from_user.username}, "
        user_info += f"Name: {message.from_user.first_name}"
        if message.from_user.last_name:
            user_info += f" {message.from_user.last_name}"

        logger.info(f"Services callback received from user: {user_info}")

        await message.delete()

        await message.answer(
            f"*–í—ã –º–æ–∂–µ—Ç–µ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –Ω–∞—à–∏–º–∏ –ø—Ä–æ–µ–∫—Ç–∞–º–∏ –Ω–∏–∂–µ, –Ω–∞–∂–∏–º–∞—è –∫–Ω–æ–ø–∫–∏.*\n\n"
            "–ï—Å–ª–∏ —É –≤–∞—Å –ø–æ—è–≤–∏–ª–∏—Å—å –≤–æ–ø—Ä–æ—Å—ã - –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É '–•–æ—á—É –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é' –∏ –º—ã –ø–æ–¥—Ä–æ–±–Ω–æ –Ω–∞ –Ω–∏—Ö –æ—Ç–≤–µ—Ç–∏–º",
            parse_mode=ParseMode.MARKDOWN,
            reply_markup=projects_kb
        )
    except Exception as e:
        # –õ–æ–≥–∏—Ä—É–µ–º –¥—Ä—É–≥–∏–µ –æ—à–∏–±–∫–∏ —Å –ø–æ–ª–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
        logger.error(
            f"Unexpected error in services callback for user {message.from_user.id}: {e}",
            exc_info=True
        )

@router.message(F.text == "–û—á–∏—Å—Ç–∫–∞ –∫–æ—Ç–ª–æ–≤ –∏ —Ç—Ä—É–±")
async def pipes_cleaning_callback(message: Message):
    await message.delete()
    try:
        # –ê–±—Å–æ–ª—é—Ç–Ω—ã–π –ø—É—Ç—å –∫ –ø–∞–ø–∫–µ —Å —Ñ–æ—Ç–æ
        PROJECT_ROOT = Path(__file__).parent.parent  # –ø–æ–¥–Ω–∏–º–∞–µ–º—Å—è –Ω–∞ 2 —É—Ä–æ–≤–Ω—è –≤–≤–µ—Ä—Ö
        PHOTO_DIR = PROJECT_ROOT / "projects_images" / "calc_plaque"

        file_names = [
            "5289569554843957948.jpg",
            "5289569554843957950.jpg",
            "5289569554843957951.jpg",
            "5289569554843957952.jpg",
            "5289569554843957956.jpg",
            "5289569554843957957.jpg",
            "5289569554843957958.jpg",
            "5289569554843957960.jpg",
            "5289569554843957961.jpg",
            "5289569554843957962.jpg",
        ]

        file_paths = [PHOTO_DIR / fname for fname in file_names]

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Ñ–∞–π–ª–æ–≤
        for path in file_paths:
            if not path.exists():
                logger.error(f"–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {path}")
                return

        # –ü–æ–¥–ø–∏—Å—å —Ç–æ–ª—å–∫–æ –¥–ª—è –ø–µ—Ä–≤–æ–≥–æ —Ñ–æ—Ç–æ
        caption = (
            "üö® *–ß—Ç–æ —ç—Ç–æ?*\n\n"
            "*–ù–∞–∫–∏–ø—å, —Ä–∂–∞–≤—á–∏–Ω–∞, –º—É—Å–æ—Ä ‚Äî –≤—Å—ë, —á—Ç–æ —Å—ä–µ–¥–∞–µ—Ç –≤–∞—à –∫–æ—Ç—ë–ª, –±–æ–π–ª–µ—Ä –∏ —Ç—Ä—É–±—ã –∏–∑–Ω—É—Ç—Ä–∏.*\n\n"
            "–ú—ã –≤—ã—á–∏—â–∞–µ–º ‚Äî –¥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è '–∫–∞–∫ –Ω–æ–≤—ã–π'.\n"
            "üõ†Ô∏è –ß–∏—Å—Ç–∫–∞ –∫–æ—Ç–ª–æ–≤, –±–æ–π–ª–µ—Ä–æ–≤, —Ç—Ä—É–± ‚Äî –±–µ–∑ —Ä–∞–∑–±–æ—Ä–∫–∏, –±—ã—Å—Ç—Ä–æ –∏ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ.\n"
            "üëâ –ù–µ –∂–¥–∏—Ç–µ –∞–≤–∞—Ä–∏–∏! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–≤–æ—ë –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ —É–∂–µ —Å–µ–≥–æ–¥–Ω—è.\n"
            "üì© –ù–∞–ø–∏—à–∏—Ç–µ ‚Äî —Å–¥–µ–ª–∞–µ–º —á–∏—Å—Ç–∫—É –∑–∞ 1 –¥–µ–Ω—å."
        )

        media = []
        for i, path in enumerate(file_paths):
            if i == 0:
                media.append(
                    InputMediaPhoto(
                        media=FSInputFile(path),
                        caption=caption,
                        parse_mode=ParseMode.MARKDOWN,
                        reply_markup=projects_kb
                    )
                )
            else:
                media.append(InputMediaPhoto(media=FSInputFile(path)))

        await bot.send_media_group(chat_id=message.chat.id, media=media)

    except Exception as e:
        # –õ–æ–≥–∏—Ä—É–µ–º –¥—Ä—É–≥–∏–µ –æ—à–∏–±–∫–∏ —Å –ø–æ–ª–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
        logger.error(
            f"Unexpected error in services callback for user {message.from_user.id}: {e}",
            exc_info=True
        )


@router.message(F.text == "–ú–æ–Ω—Ç–∞–∂ —Ç—ë–ø–ª–æ–≥–æ –ø–æ–ª–∞")
async def warm_floor_callback(message: Message):
    await message.delete()
    try:
        # –ê–±—Å–æ–ª—é—Ç–Ω—ã–π –ø—É—Ç—å –∫ –ø–∞–ø–∫–µ —Å —Ñ–æ—Ç–æ
        PROJECT_ROOT = Path(__file__).parent.parent  # –ø–æ–¥–Ω–∏–º–∞–µ–º—Å—è –Ω–∞ 2 —É—Ä–æ–≤–Ω—è –≤–≤–µ—Ä—Ö
        PHOTO_DIR = PROJECT_ROOT / "projects_images" / "warm_floor_installation"

        file_names = [
            "1.jpg",
            "2.jpg",
            "3.jpg",
            "4.jpg",
        ]

        file_paths = [PHOTO_DIR / fname for fname in file_names]

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Ñ–∞–π–ª–æ–≤
        for path in file_paths:
            if not path.exists():
                logger.error(f"–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {path}")
                return

        # –ü–æ–¥–ø–∏—Å—å —Ç–æ–ª—å–∫–æ –¥–ª—è –ø–µ—Ä–≤–æ–≥–æ —Ñ–æ—Ç–æ
        caption = (
            "üî• *–¢–µ–ø–ª—ã–π –ø–æ–ª ‚Äî –∫–æ–º—Ñ–æ—Ä—Ç –∏ —ç–∫–æ–Ω–æ–º–∏—è –∫—Ä—É–≥–ª—ã–π –≥–æ–¥*\n\n"
            "*–•–æ–ª–æ–¥–Ω—ã–µ –ø–æ–ª—ã, —Å–∫–≤–æ–∑–Ω—è–∫–∏, –≤—ã—Å–æ–∫–∞—è –≤–ª–∞–∂–Ω–æ—Å—Ç—å ‚Äî –≤—Å—ë —ç—Ç–æ –¥–µ–ª–∞–µ—Ç –≤–∞—à –¥–æ–º –Ω–µ—É–¥–æ–±–Ω—ã–º.*\n\n"
            "–ú—ã —É–∫–ª–∞–¥—ã–≤–∞–µ–º —Ç—ë–ø–ª—ã–µ –ø–æ–ª—ã ‚Äî —Ä–æ–≤–Ω–æ, –Ω–∞–¥—ë–∂–Ω–æ, –±–µ–∑–æ–ø–∞—Å–Ω–æ.\n"
            "üõ†Ô∏è –ú–æ–Ω—Ç–∞–∂ —Ç–µ–ø–ª—ã—Ö –ø–æ–ª–æ–≤ –ø–æ–¥ –ª—é–±—ã–µ –ø–æ–∫—Ä—ã—Ç–∏—è: –ø–ª–∏—Ç–∫–∞, –ª–∞–º–∏–Ω–∞—Ç, –ø–∞—Ä–∫–µ—Ç.\n"
            "‚ö° –ë—ã—Å—Ç—Ä–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–∏—Å—Ç–µ–º–µ –æ—Ç–æ–ø–ª–µ–Ω–∏—è –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ —Ç–µ—Ä–º–æ—Ä–µ–≥—É–ª—è—Ç–æ—Ä.\n"
            "üëâ –ó–∞–±—É–¥—å—Ç–µ –ø—Ä–æ —Ö–æ–ª–æ–¥ –∏ —Å—ã—Ä–æ—Å—Ç—å ‚Äî —Å–¥–µ–ª–∞–π—Ç–µ –¥–æ–º –∫–æ–º—Ñ–æ—Ä—Ç–Ω—ã–º —É–∂–µ —Å–µ–≥–æ–¥–Ω—è.\n"
            "üì© –°–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ ‚Äî –ø—Ä–æ–∫–æ–Ω—Å—É–ª—å—Ç–∏—Ä—É–µ–º –∏ —Ä–∞—Å—Å—á–∏—Ç–∞–µ–º —Å—Ç–æ–∏–º–æ—Å—Ç—å –∑–∞ 1 –¥–µ–Ω—å."
        )

        media = []
        for i, path in enumerate(file_paths):
            if i == 0:
                media.append(
                    InputMediaPhoto(
                        media=FSInputFile(path),
                        caption=caption,
                        parse_mode=ParseMode.MARKDOWN,
                        reply_markup=projects_kb
                    )
                )
            else:
                media.append(InputMediaPhoto(media=FSInputFile(path)))

        await bot.send_media_group(chat_id=message.chat.id, media=media)

    except Exception as e:
        # –õ–æ–≥–∏—Ä—É–µ–º –¥—Ä—É–≥–∏–µ –æ—à–∏–±–∫–∏ —Å –ø–æ–ª–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
        logger.error(
            f"Unexpected error in services callback for user {message.from_user.id}: {e}",
            exc_info=True
        )


@router.message(F.text == "–í–æ–¥–æ–ø—Ä–æ–≤–æ–¥–Ω–∞—è —Ä–∞–∑–≤–æ–¥–∫–∞")
async def pipes_routing_callback(message: Message):
    await message.delete()
    try:
        # –ê–±—Å–æ–ª—é—Ç–Ω—ã–π –ø—É—Ç—å –∫ –ø–∞–ø–∫–µ —Å —Ñ–æ—Ç–æ
        PROJECT_ROOT = Path(__file__).parent.parent  # –ø–æ–¥–Ω–∏–º–∞–µ–º—Å—è –Ω–∞ 2 —É—Ä–æ–≤–Ω—è –≤–≤–µ—Ä—Ö
        PHOTO_DIR = PROJECT_ROOT / "projects_images" / "water_supply_routing"

        file_names = [
            "1.jpg",

        ]

        file_paths = [PHOTO_DIR / fname for fname in file_names]

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Ñ–∞–π–ª–æ–≤
        for path in file_paths:
            if not path.exists():
                logger.error(f"–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {path}")
                return

        # –ü–æ–¥–ø–∏—Å—å —Ç–æ–ª—å–∫–æ –¥–ª—è –ø–µ—Ä–≤–æ–≥–æ —Ñ–æ—Ç–æ
        caption = (
            "üîß *–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è —Ä–∞–∑–≤–æ–¥–∫–∞ —Ç—Ä—É–± ‚Äî –∑–∞–ª–æ–≥ –Ω–∞–¥–µ–∂–Ω–æ–≥–æ –æ—Ç–æ–ø–ª–µ–Ω–∏—è*\n\n"
            "*–•–∞–æ—Ç–∏—á–Ω–∞—è –ø—Ä–æ–∫–ª–∞–¥–∫–∞ –∏ –Ω–µ–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –ø—Ä–∏–≤–æ–¥—è—Ç –∫ —É—Ç–µ—á–∫–∞–º, —à—É–º—É –∏ –ø–æ–ª–æ–º–∫–∞–º.*\n\n"
            "–ú—ã –¥–µ–ª–∞–µ–º –∞–∫–∫—É—Ä–∞—Ç–Ω—É—é, –ø—Ä–æ–¥—É–º–∞–Ω–Ω—É—é —Ä–∞–∑–≤–æ–¥–∫—É ‚Äî –Ω–∞–¥—ë–∂–Ω–æ, —ç—Å—Ç–µ—Ç–∏—á–Ω–æ, –±–µ–∑–æ–ø–∞—Å–Ω–æ.\n"
            "üõ†Ô∏è –ú–æ–Ω—Ç–∞–∂ —Ç—Ä—É–± –ª—é–±–æ–π —Å–ª–æ–∂–Ω–æ—Å—Ç–∏, –ø–æ–¥ –∫–ª—é—á, —Å –≥–∞—Ä–∞–Ω—Ç–∏–µ–π –Ω–∞ —Ä–∞–±–æ—Ç—É.\n"
            "‚ö° –û–ø—Ç–∏–º–∞–ª—å–Ω–∞—è —Å—Ö–µ–º–∞ –¥–ª—è –∫–æ—Ç–µ–ª—å–Ω–æ–≥–æ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è –∏ –±–æ–π–ª–µ—Ä–æ–≤.\n"
            "üëâ –ó–∞–±—É–¥—å—Ç–µ –ø—Ä–æ –ø—Ä–æ–±–ª–µ–º—ã —Å –æ—Ç–æ–ø–ª–µ–Ω–∏–µ–º ‚Äî –≤—Å—ë –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –∏–¥–µ–∞–ª—å–Ω–æ.\n"
            "üì© –°–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ ‚Äî –ø—Ä–æ–µ–∫—Ç –∏ –º–æ–Ω—Ç–∞–∂ –∑–∞ 1 –¥–µ–Ω—å."
        )

        media = []
        for i, path in enumerate(file_paths):
            if i == 0:
                media.append(
                    InputMediaPhoto(
                        media=FSInputFile(path),
                        caption=caption,
                        parse_mode=ParseMode.MARKDOWN,
                        reply_markup=projects_kb
                    )
                )
            else:
                media.append(InputMediaPhoto(media=FSInputFile(path)))

        await bot.send_media_group(chat_id=message.chat.id, media=media)

    except Exception as e:
        # –õ–æ–≥–∏—Ä—É–µ–º –¥—Ä—É–≥–∏–µ –æ—à–∏–±–∫–∏ —Å –ø–æ–ª–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
        logger.error(
            f"Unexpected error in services callback for user {message.from_user.id}: {e}",
            exc_info=True
        )


@router.message(F.text == "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ—Ç–ª–æ–≤ –∏ –±–æ–π–ª–µ—Ä–æ–≤")
async def heater_installation_callback(message: Message):
    await message.delete()
    try:
        # –ê–±—Å–æ–ª—é—Ç–Ω—ã–π –ø—É—Ç—å –∫ –ø–∞–ø–∫–µ —Å —Ñ–æ—Ç–æ
        PROJECT_ROOT = Path(__file__).parent.parent  # –ø–æ–¥–Ω–∏–º–∞–µ–º—Å—è –Ω–∞ 2 —É—Ä–æ–≤–Ω—è –≤–≤–µ—Ä—Ö
        PHOTO_DIR = PROJECT_ROOT / "projects_images" / "heater_installation"

        file_names = [
            "1.jpg",
            "2.jpg",

        ]

        file_paths = [PHOTO_DIR / fname for fname in file_names]

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Ñ–∞–π–ª–æ–≤
        for path in file_paths:
            if not path.exists():
                logger.error(f"–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {path}")
                return

        # –ü–æ–¥–ø–∏—Å—å —Ç–æ–ª—å–∫–æ –¥–ª—è –ø–µ—Ä–≤–æ–≥–æ —Ñ–æ—Ç–æ
        caption = (
            "üî• *–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ—Ç–ª–æ–≤ –∏ –±–æ–π–ª–µ—Ä–æ–≤ ‚Äî –Ω–∞–¥—ë–∂–Ω–æ–µ —Ç–µ–ø–ª–æ –≤ –¥–æ–º–µ*\n\n"
            "*–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è –ø—Ä–∏–≤–æ–¥–∏—Ç –∫ –ø–æ–ª–æ–º–∫–∞–º, –∞–≤–∞—Ä–∏—è–º –∏ –ª–∏—à–Ω–∏–º —Ä–∞—Å—Ö–æ–¥–∞–º.*\n\n"
            "–ú—ã —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ—Ç–ª—ã –∏ –±–æ–π–ª–µ—Ä—ã ‚Äî —Ç–æ—á–Ω–æ, –±–µ–∑–æ–ø–∞—Å–Ω–æ, —Å –≥–∞—Ä–∞–Ω—Ç–∏–µ–π.\n"
            "üõ†Ô∏è –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–∏—Å—Ç–µ–º–µ –æ—Ç–æ–ø–ª–µ–Ω–∏—è –∏ –≤–æ–¥–æ—Å–Ω–∞–±–∂–µ–Ω–∏—è, –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –∏ –ø—É—Å–∫ –ø–æ–¥ –∫–ª—é—á.\n"
            "‚ö° –û–ø—Ç–∏–º–∞–ª—å–Ω–∞—è —Ä–∞–±–æ—Ç–∞ –∏ –¥–æ–ª–≥–∏–π —Å—Ä–æ–∫ —Å–ª—É–∂–±—ã –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è.\n"
            "üëâ –ó–∞–±—É–¥—å—Ç–µ –ø—Ä–æ –ø–µ—Ä–µ–±–æ–∏ —Å –≥–æ—Ä—è—á–µ–π –≤–æ–¥–æ–π –∏ –æ—Ç–æ–ø–ª–µ–Ω–∏–µ–º ‚Äî –≤—Å—ë –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –±–µ–∑ –ø—Ä–æ–±–ª–µ–º.\n"
            "üì© –°–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ ‚Äî –º–æ–Ω—Ç–∞–∂ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞ 1 –¥–µ–Ω—å."
        )

        media = []
        for i, path in enumerate(file_paths):
            if i == 0:
                media.append(
                    InputMediaPhoto(
                        media=FSInputFile(path),
                        caption=caption,
                        parse_mode=ParseMode.MARKDOWN,
                        reply_markup=projects_kb
                    )
                )
            else:
                media.append(InputMediaPhoto(media=FSInputFile(path)))

        await bot.send_media_group(chat_id=message.chat.id, media=media)

    except Exception as e:
        # –õ–æ–≥–∏—Ä—É–µ–º –¥—Ä—É–≥–∏–µ –æ—à–∏–±–∫–∏ —Å –ø–æ–ª–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
        logger.error(
            f"Unexpected error in services callback for user {message.from_user.id}: {e}",
            exc_info=True
        )


@router.message(F.text == "–í –Ω–∞—á–∞–ª–æ")
async def main_callback(message: Message):
    await message.delete()
    await start(message)