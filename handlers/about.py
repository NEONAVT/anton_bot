import logging
from aiogram import types, Router, F
from aiogram.enums import ParseMode
from aiogram.types import CallbackQuery, Message
from aiogram.exceptions import TelegramBadRequest
from keyboards import start_kb

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è —ç—Ç–æ–≥–æ –º–æ–¥—É–ª—è
logger = logging.getLogger(__name__)

router = Router()


@router.message(F.text == "üë®‚Äçüîß –û –Ω–∞—Å")
async def about_callback(message: Message):
    try:
        logger.info(f"User {message.from_user.id} ({message.from_user.username}) requested prices")

        await message.delete()

        await message.answer(
            "*–û –Ω–∞—Å*\n\n"
            "–ú—ã —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º—Å—è –Ω–∞ –∏–Ω–∂–µ–Ω–µ—Ä–Ω—ã—Ö —Å–∏—Å—Ç–µ–º–∞—Ö, –∫–æ—Ç–æ—Ä—ã–µ –¥–µ–ª–∞—é—Ç –¥–æ–º –∏ –±–∏–∑–Ω–µ—Å "
            "–∫–æ–º—Ñ–æ—Ä—Ç–Ω—ã–º–∏ –∏ –±–µ–∑–æ–ø–∞—Å–Ω—ã–º–∏. –° –∫–æ–Ω—Ü–∞ 90-—Ö –≥–æ–¥–æ–≤ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏ –º–µ–Ω—è–µ–º "
            "–≥–∞–∑–æ–≤—ã–µ –∫–æ—Ç–ª—ã, –∫–æ–ª–æ–Ω–∫–∏ –∏ –±–æ–π–ª–µ—Ä—ã, –ø—Ä–æ–µ–∫—Ç–∏—Ä—É–µ–º –∏ –º–æ–Ω—Ç–∏—Ä—É–µ–º —Å–∏—Å—Ç–µ–º—ã "
            "–æ—Ç–æ–ø–ª–µ–Ω–∏—è –∏ –≤–æ–¥–æ—Å–Ω–∞–±–∂–µ–Ω–∏—è –ø–æ–¥ –∫–ª—é—á.\n\n"
            "–†–∞–±–æ—Ç–∞–µ–º –∫–∞–∫ —Å —á–∞—Å—Ç–Ω—ã–º–∏ –∫–ª–∏–µ–Ω—Ç–∞–º–∏, —Ç–∞–∫ –∏ —Å –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è–º–∏. –î–ª—è –æ–¥–Ω–∏—Ö —ç—Ç–æ "
            "–≥–∞—Ä–∞–Ω—Ç–∏—è —Ç—ë–ø–ª–æ–≥–æ –∏ –Ω–∞–¥—ë–∂–Ω–æ–≥–æ –¥–æ–º–∞, –¥–ª—è –¥—Ä—É–≥–∏—Ö ‚Äî –±–µ—Å–ø–µ—Ä–µ–±–æ–π–Ω–∞—è —Ä–∞–±–æ—Ç–∞ "
            "–æ–±—ä–µ–∫—Ç–∞ –±–µ–∑ –ø—Ä–æ—Å—Ç–æ—è –∏ –ª–∏—à–Ω–∏—Ö –∑–∞—Ç—Ä–∞—Ç.\n\n"
            "–ù–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞ –Ω–µ —Ç–æ–ª—å–∫–æ –º–æ–Ω—Ç–∏—Ä—É–µ—Ç –Ω–æ–≤–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ, –Ω–æ –∏ –ø—Ä–æ–¥–ª–µ–≤–∞–µ—Ç —Å—Ä–æ–∫ "
            "—Å–ª—É–∂–±—ã —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ: –ø—Ä–æ–º—ã–≤–∞–µ–º —Å–∏—Å—Ç–µ–º—ã –æ—Ç–æ–ø–ª–µ–Ω–∏—è –∏ –≤–æ–¥–æ—Å–Ω–∞–±–∂–µ–Ω–∏—è, —á–∏—Å—Ç–∏–º "
            "–±–æ–π–ª–µ—Ä—ã, —É—Å—Ç—Ä–∞–Ω—è–µ–º –∑–∞—Å–æ—Ä—ã –∏ –ø–æ–≤—ã—à–∞–µ–º —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —Ä–∞–±–æ—Ç—ã.\n\n"
            "–û–ø—ã—Ç –±–æ–ª–µ–µ 25 –ª–µ—Ç ‚Äî —ç—Ç–æ —É–º–µ–Ω–∏–µ —Ä–µ—à–∞—Ç—å –∑–∞–¥–∞—á–∏ —Ä–∞–∑–Ω–æ–≥–æ –º–∞—Å—à—Ç–∞–±–∞: –æ—Ç –∫–≤–∞—Ä—Ç–∏—Ä—ã "
            "–∏ –∫–æ—Ç—Ç–µ–¥–∂–∞ –¥–æ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –ø–æ–º–µ—â–µ–Ω–∏—è. –ú—ã –∑–Ω–∞–µ–º, —á—Ç–æ –æ—Ç –∏–Ω–∂–µ–Ω–µ—Ä–Ω—ã—Ö "
            "—Å–µ—Ç–µ–π –∑–∞–≤–∏—Å–∏—Ç –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –∂–∏–∑–Ω–∏, –∏ –ø–æ—ç—Ç–æ–º—É –¥–µ–ª–∞–µ–º –∏—Ö –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –Ω–∞–¥—ë–∂–Ω—ã–º–∏, "
            "—ç–∫–æ–Ω–æ–º–∏—á–Ω—ã–º–∏ –∏ –ø—Ä–æ—Å—Ç—ã–º–∏ –≤ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–∏.",
            parse_mode=ParseMode.MARKDOWN,
            reply_markup=start_kb
        )

        logger.info(f"Prices message successfully updated for user {message.from_user.id}")

    except TelegramBadRequest as e:
        if "message is not modified" in str(e):
            logger.debug(f"Message not modified for user {message.from_user.id} - same content")
            await message.answer()
        else:
            logger.error(f"TelegramBadRequest for user {message.from_user.id}: {e}")
            await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è", show_alert=False)

    except Exception as e:
        logger.error(f"Unexpected error for user {message.from_user.id}: {e}", exc_info=True)
        await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞", show_alert=False)