import logging
from aiogram import types, Router
from aiogram.filters import CommandStart
from keyboards import start_kb

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è —ç—Ç–æ–≥–æ –º–æ–¥—É–ª—è
logger = logging.getLogger(__name__)

router = Router()


@router.message(CommandStart())
async def start(message: types.Message):
    try:
        # –õ–æ–≥–∏—Ä—É–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
        user_info = f"ID: {message.from_user.id}, "
        if message.from_user.username:
            user_info += f"Username: @{message.from_user.username}, "
        user_info += f"Name: {message.from_user.first_name}"
        if message.from_user.last_name:
            user_info += f" {message.from_user.last_name}"

        logger.info(f"Start command received from user: {user_info}")
        logger.info(f"Chat ID: {message.chat.id}, Chat type: {message.chat.type}")

        await message.answer(
            text=(
                f"üëã–î–æ–±—Ä—ã–π –¥–µ–Ω—å, {message.from_user.first_name}!\n\n"
                f"–ú—ã –ø–æ–º–æ–≥–∞–µ–º —Å –∑–∞–º–µ–Ω–æ–π –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–æ–π –≥–∞–∑–æ–≤—ã—Ö –∫–æ—Ç–ª–æ–≤, –∫–æ–ª–æ–Ω–æ–∫, –±–æ–π–ª–µ—Ä–æ–≤, "
                f"–∞ —Ç–∞–∫–∂–µ —Å –º–æ–Ω—Ç–∞–∂–æ–º —Å–∏—Å—Ç–µ–º –æ—Ç–æ–ø–ª–µ–Ω–∏—è –∏ –≤–æ–¥–æ—Å–Ω–∞–±–∂–µ–Ω–∏—è —Å –Ω—É–ª—è.\n\n"
                f"üìû–ó–≤–æ–Ω–∫–∏ –ø—Ä–∏–Ω–∏–º–∞—é—Ç—Å—è —Å 8:00 –¥–æ 10:00. \n"
                f"–í –æ—Å—Ç–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –º—ã –∑–∞–Ω–∏–º–∞–µ–º—Å—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ–º –∑–∞–∫–∞–∑–æ–≤, "
                f"—á—Ç–æ–±—ã –≤—Å—ë –±—ã–ª–æ —Å–¥–µ–ª–∞–Ω–æ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ –∏ –≤ —Å—Ä–æ–∫.\n\n"
                f"–í—ã –º–æ–∂–µ—Ç–µ –±—ã—Å—Ç—Ä–æ —É–∑–Ω–∞—Ç—å –æ –Ω–∞—à–∏—Ö —É—Å–ª—É–≥–∞—Ö –∏–ª–∏ –∑–∞–∫–∞–∑–∞—Ç—å –æ–±—Ä–∞—Ç–Ω—ã–π –∑–≤–æ–Ω–æ–∫ ‚Äî "
                f"—Å –≤–∞–º–∏ —Å–≤—è–∂—É—Ç—Å—è –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.\n\n"
                f"‚¨áÔ∏è–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–Ω–æ–ø–∫–∞–º–∏ –Ω–∏–∂–µ."
            ),
            reply_markup=start_kb
        )

        logger.info(f"Start message successfully sent to user {message.from_user.id}")

    except Exception as e:
        # –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É —Å –ø–æ–ª–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
        logger.error(
            f"Error sending start message to user {message.from_user.id}: {e}",
            exc_info=True
        )

        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ—à–∏–±–∫–µ
        error_context = {
            'user_id': message.from_user.id,
            'chat_id': message.chat.id,
            'error_type': type(e).__name__,
            'error_message': str(e)
        }
        logger.debug(f"Error context: {error_context}")

        # –ú–æ–∂–Ω–æ —Ç–∞–∫–∂–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ–± –æ—à–∏–±–∫–µ
        try:
            await message.answer(
                "‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
            )
        except Exception as inner_e:
            logger.error(f"Failed to send error message to user: {inner_e}")